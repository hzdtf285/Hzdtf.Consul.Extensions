<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hzdtf.Utility.AspNet.Core</name>
    </assembly>
    <members>
        <member name="T:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleMiddleware">
            <summary>
            API异常处理中间件
            只有对路径是从传过来的配置前辍才处理
            会对下一个中间件捕获异常，如果发生异常，会返回BasicReturnInfo对象
            @ 黄振东
            </summary>
        </member>
        <member name="F:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleMiddleware.next">
            <summary>
            下一个中间件处理委托
            </summary>
        </member>
        <member name="F:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleMiddleware.options">
            <summary>
            Api异常处理选项配置
            </summary>
        </member>
        <member name="F:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleMiddleware.log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Options.IOptions{Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleOptions},Hzdtf.Logger.Contract.Standard.ILogable)">
            <summary>
            构造方法
            </summary>
            <param name="next">下一个中间件处理委托</param>
            <param name="options">Api异常处理选项配置</param>
            <param name="log">日志</param>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            执行
            </summary>
            <param name="context">http上下文</param>
            <returns>任务</returns>
        </member>
        <member name="T:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleMiddlewareExtensions">
            <summary>
            Api异常处理中间件扩展类
            @ 黄振东
            </summary>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleMiddlewareExtensions.UseApiExceptionHandle(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            使用Api异常处理
            </summary>
            <param name="app">应用</param>
            <returns>应用</returns>
        </member>
        <member name="T:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleOptions">
            <summary>
            Api异常处理选项配置
            @ 黄振东
            </summary>
        </member>
        <member name="P:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleOptions.IsDevelopment">
            <summary>
            是否开发环境
            </summary>
        </member>
        <member name="P:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleOptions.PfxApiPath">
            <summary>
            Api路径前辍，默认是/api/
            </summary>
        </member>
        <member name="P:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleOptions.Serialization">
            <summary>
            序列化，默认为Json
            </summary>
        </member>
        <member name="P:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleOptions.ExceptionCode">
            <summary>
            异常编码，默认为500
            </summary>
        </member>
        <member name="P:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleOptions.ExceptionMsg">
            <summary>
            异常消息，默认为“操作失败”
            </summary>
        </member>
        <member name="P:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleOptions.HttpStatusCode">
            <summary>
            Http状态码，默认返回200
            </summary>
        </member>
        <member name="T:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleServiceExtensions">
            <summary>
            Api异常处理服务扩展类
            @ 黄振东
            </summary>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleServiceExtensions.AddApiExceptionHandle(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Hzdtf.Utility.AspNet.Core.ExceptionHandle.ApiExceptionHandleOptions})">
            <summary>
            添加Api异常处理服务
            </summary>
            <param name="services">服务收藏</param>
            <param name="options">Api异常处理选项配置</param>
            <returns>服务收藏</returns>
        </member>
        <member name="T:Hzdtf.Utility.AspNet.Core.LoadBalance.HashIpPortLoadBalanceExtensions">
            <summary>
            哈希+IP负载均衡扩展类
            @ 黄振东
            </summary>
        </member>
        <member name="F:Hzdtf.Utility.AspNet.Core.LoadBalance.HashIpPortLoadBalanceExtensions.localPort">
            <summary>
            本地端口
            </summary>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.LoadBalance.HashIpPortLoadBalanceExtensions.AddHashIpPortLoadBalance(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加哈希+IP负载均衡
            </summary>
            <param name="services">服务</param>
            <returns>服务</returns>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.LoadBalance.HashIpPortLoadBalanceExtensions.UseHashIpPortLoadBalance(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Int32)">
            <summary>
            使用哈希+IP负载均衡
            </summary>
            <param name="app">应用生成器</param>
            <param name="port">端口</param>
            <returns>应用生成器</returns>
        </member>
        <member name="T:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesBuilderCacheExtensions">
            <summary>
            统一服务生成器缓存扩展类
            @ 黄振东
            </summary>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesBuilderCacheExtensions.AddUnityServicesBuilderCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Hzdtf.Utility.Standard.RemoteService.UnitServiceBuilderOptions})">
            <summary>
            添加统一服务生成器缓存
            </summary>
            <param name="services">服务</param>
            <param name="options">配置回调</param>
            <returns>服务</returns>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesBuilderCacheExtensions.AddUnityServicesBuilderConfigure(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Hzdtf.Utility.Standard.RemoteService.UnitServiceBuilderOptions},System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})">
            <summary>
            添加统一服务生成器微软配置
            </summary>
            <param name="services">服务</param>
            <param name="options">配置回调</param>
            <param name="beforeConfigBuilder">生成配置前回调</param>
            <returns>服务</returns>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesBuilderCacheExtensions.AddUnityServicesBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Hzdtf.Utility.Standard.RemoteService.UnitServiceBuilderOptions,Hzdtf.Utility.Standard.RemoteService.Options.IUnityServicesOptions},System.Action{Hzdtf.Utility.Standard.RemoteService.UnitServiceBuilderOptions})">
            <summary>
            添加统一服务生成器
            </summary>
            <param name="services">服务</param>
            <param name="callbackServiceOptions">回调服务配置</param>
            <param name="options">配置回调</param>
            <returns>服务</returns>
        </member>
        <member name="T:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration">
            <summary>
            统一服务配置来自微软配置对象里
            @ 黄振东
            </summary>
        </member>
        <member name="F:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration.configuration">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration.beforeConfigurationBuilder">
            <summary>
            配置生成前回调
            </summary>
        </member>
        <member name="F:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration.services">
            <summary>
            服务配置数组，目的是为了从配置里读取时，能将部分对象还原
            </summary>
        </member>
        <member name="F:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration.syncServices">
            <summary>
            同步服务配置列表
            </summary>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration.#ctor(System.String,System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})">
            <summary>
            构造方法
            </summary>
            <param name="jsonFile">json文件</param>
            <param name="beforeConfigurationBuilder">配置生成前回调</param>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration.#ctor(Hzdtf.Utility.Standard.RemoteService.Options.UnityServicesOptions,System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})">
            <summary>
            构造方法
            </summary>
            <param name="options">配置</param>
            <param name="beforeConfigurationBuilder">配置生成前回调</param>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration.Reader">
            <summary>
            读取
            </summary>
            <returns>数据</returns>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration.WriteToStorage(Hzdtf.Utility.Standard.RemoteService.Options.UnityServicesOptions)">
            <summary>
            写入到存储里
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:Hzdtf.Utility.AspNet.Core.RemoteService.UnityServicesOptionsConfiguration.SetServiceOptions(Hzdtf.Utility.Standard.RemoteService.Options.ServicesOptions[])">
            <summary>
            设置服务配置数组
            </summary>
            <param name="services">服务配置数组</param>
        </member>
    </members>
</doc>
